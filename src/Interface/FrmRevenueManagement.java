/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Process.BILL;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.print.PrinterException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Acer
 */
public class FrmRevenueManagement extends javax.swing.JFrame {
    BILL bill = new BILL();
    Locale locale = new Locale("vi", "VN");
    NumberFormat money_format = NumberFormat.getCurrencyInstance(locale);
    String report_title = "";

    public FrmRevenueManagement() {
        initComponents();
        setIcons();
        this.setExtendedState(this.MAXIMIZED_BOTH);
        setCalendarLocale();
        try {
            showData(bill.getAllBills());
            showAllChart();
        } catch (SQLException ex) {
            Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
        }

        tableContent();
        cbb_filter.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlNorth = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btn_back = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        pnlWest = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrder_list = new javax.swing.JTable();
        pnl_filter_board = new javax.swing.JPanel();
        btn_filter = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbb_filter = new javax.swing.JComboBox<>();
        layerpnl_date_month_year = new javax.swing.JLayeredPane();
        pnl_date = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        datechooser_start_date = new com.toedter.calendar.JDateChooser();
        datechooser_end_date = new com.toedter.calendar.JDateChooser();
        pnl_month = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        monthchooser_start_month = new com.toedter.calendar.JMonthChooser();
        monthchooser_end_month = new com.toedter.calendar.JMonthChooser();
        pnl_year = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        yearchooser_start_year = new com.toedter.calendar.JYearChooser();
        yearchooser_end_year = new com.toedter.calendar.JYearChooser();
        pnl_view_all = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        lbl_total_money = new javax.swing.JLabel();
        lbl_totalmoney_icon = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        lbl_average_money = new javax.swing.JLabel();
        lbl_average_icon = new javax.swing.JLabel();
        btn_export_report = new javax.swing.JButton();
        pnlCenter = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Trang quản lý doanh thu");
        setUndecorated(true);

        pnlNorth.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("TRANG QUẢN LÝ DOANH THU");
        jLabel1.setFocusable(false);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        btn_back.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_back.setText("Quay lại");
        btn_back.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btn_back.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout pnlNorthLayout = new javax.swing.GroupLayout(pnlNorth);
        pnlNorth.setLayout(pnlNorthLayout);
        pnlNorthLayout.setHorizontalGroup(
            pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNorthLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_back)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(1064, Short.MAX_VALUE))
            .addComponent(jSeparator1)
        );
        pnlNorthLayout.setVerticalGroup(
            pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNorthLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNorthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_back, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pnlNorth, java.awt.BorderLayout.NORTH);

        pnlWest.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bảng doanh thu", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblOrder_list.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblOrder_list.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblOrder_list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Ngày", "Tổng tiền", "Tiền đã giảm", "Doanh thu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblOrder_list);

        pnl_filter_board.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btn_filter.setBackground(new java.awt.Color(145, 179, 242));
        btn_filter.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btn_filter.setText("Lọc");
        btn_filter.setBorderPainted(false);
        btn_filter.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn_filter.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_filterActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Lọc theo: ");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Xem từ  :");

        cbb_filter.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cbb_filter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Xem tất cả", "Lọc theo ngày", "Lọc theo tháng(Trong năm hiện tại)", "Lọc theo năm" }));
        cbb_filter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbb_filterActionPerformed(evt);
            }
        });

        layerpnl_date_month_year.setLayout(new java.awt.CardLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("đến");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnl_dateLayout = new javax.swing.GroupLayout(pnl_date);
        pnl_date.setLayout(pnl_dateLayout);
        pnl_dateLayout.setHorizontalGroup(
            pnl_dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_dateLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(datechooser_start_date, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(datechooser_end_date, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );
        pnl_dateLayout.setVerticalGroup(
            pnl_dateLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
            .addComponent(datechooser_start_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(datechooser_end_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layerpnl_date_month_year.add(pnl_date, "card2");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("đến");
        jLabel6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnl_monthLayout = new javax.swing.GroupLayout(pnl_month);
        pnl_month.setLayout(pnl_monthLayout);
        pnl_monthLayout.setHorizontalGroup(
            pnl_monthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_monthLayout.createSequentialGroup()
                .addComponent(monthchooser_start_month, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(29, 29, 29)
                .addComponent(monthchooser_end_month, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(116, Short.MAX_VALUE))
        );
        pnl_monthLayout.setVerticalGroup(
            pnl_monthLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
            .addComponent(monthchooser_start_month, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(monthchooser_end_month, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layerpnl_date_month_year.add(pnl_month, "card3");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("đến");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnl_yearLayout = new javax.swing.GroupLayout(pnl_year);
        pnl_year.setLayout(pnl_yearLayout);
        pnl_yearLayout.setHorizontalGroup(
            pnl_yearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_yearLayout.createSequentialGroup()
                .addComponent(yearchooser_start_year, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(yearchooser_end_year, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(222, Short.MAX_VALUE))
        );
        pnl_yearLayout.setVerticalGroup(
            pnl_yearLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 31, Short.MAX_VALUE)
            .addComponent(yearchooser_start_year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(yearchooser_end_year, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        layerpnl_date_month_year.add(pnl_year, "card4");

        javax.swing.GroupLayout pnl_view_allLayout = new javax.swing.GroupLayout(pnl_view_all);
        pnl_view_all.setLayout(pnl_view_allLayout);
        pnl_view_allLayout.setHorizontalGroup(
            pnl_view_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 403, Short.MAX_VALUE)
        );
        pnl_view_allLayout.setVerticalGroup(
            pnl_view_allLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 31, Short.MAX_VALUE)
        );

        layerpnl_date_month_year.add(pnl_view_all, "card5");

        javax.swing.GroupLayout pnl_filter_boardLayout = new javax.swing.GroupLayout(pnl_filter_board);
        pnl_filter_board.setLayout(pnl_filter_boardLayout);
        pnl_filter_boardLayout.setHorizontalGroup(
            pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl_filter_boardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(layerpnl_date_month_year)
                    .addComponent(cbb_filter, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_filter, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnl_filter_boardLayout.setVerticalGroup(
            pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl_filter_boardLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btn_filter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl_filter_boardLayout.createSequentialGroup()
                        .addGroup(pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbb_filter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(pnl_filter_boardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(layerpnl_date_month_year))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel10.setText("Tổng doanh thu");

        lbl_total_money.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_total_money.setForeground(new java.awt.Color(0, 0, 102));
        lbl_total_money.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lbl_totalmoney_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_totalmoney_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(lbl_total_money, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbl_totalmoney_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_total_money, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel11.setText("Doanh thu trung bình");

        lbl_average_money.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        lbl_average_money.setForeground(new java.awt.Color(0, 0, 102));
        lbl_average_money.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lbl_average_icon.setBackground(new java.awt.Color(255, 255, 204));
        lbl_average_icon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbl_average_icon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbl_average_money, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbl_average_icon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbl_average_money, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        btn_export_report.setBackground(new java.awt.Color(153, 255, 153));
        btn_export_report.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btn_export_report.setText("Xuất danh sách");
        btn_export_report.setBorder(null);
        btn_export_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_export_reportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlWestLayout = new javax.swing.GroupLayout(pnlWest);
        pnlWest.setLayout(pnlWestLayout);
        pnlWestLayout.setHorizontalGroup(
            pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWestLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_export_report, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnl_filter_board, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWestLayout.createSequentialGroup()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlWestLayout.setVerticalGroup(
            pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWestLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl_filter_board, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlWestLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_export_report, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(pnlWest, java.awt.BorderLayout.WEST);

        pnlCenter.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Bảng thống kê", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N
        pnlCenter.setLayout(new java.awt.BorderLayout());
        getContentPane().add(pnlCenter, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_filterActionPerformed
        int index = cbb_filter.getSelectedIndex();
        switch (index) {
            case 0 -> {
                try {
                    showData(bill.getAllBills());
                    showAllChart();
                } catch (SQLException ex) {
                    Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            case 1 -> {
                try {
                    if (datechooser_start_date.getDate() == null || datechooser_end_date.getDate() == null) {
                        JOptionPane.showMessageDialog(this, "Vui lòng chọn ngày bắt đầu và ngày kết thúc", "Thông báo", JOptionPane.WARNING_MESSAGE);
                    } else {
                        java.sql.Date start_date = new java.sql.Date(datechooser_start_date.getDate().getTime());
                        java.sql.Date end_date = new java.sql.Date(datechooser_end_date.getDate().getTime());
                        showData(bill.getBillsByDate(start_date, end_date));
                        showChartByDate(start_date, end_date);
                    }
                } catch (SQLException ex) {
                    Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            case 2 -> {
                try {
                    int start_month = monthchooser_start_month.getMonth() + 1;
                    int end_month = monthchooser_end_month.getMonth() + 1;
                    ResultSet get_bill_by_month = bill.getBillsByMonth(start_month, end_month);
                    showData(get_bill_by_month);
                    showChartByMonth(start_month, end_month);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

            case 3 -> {
                try {
                    int start_year = yearchooser_start_year.getYear();
                    int end_year = yearchooser_end_year.getYear();
                    ResultSet get_bill_by_year = bill.getBillsByYear(start_year, end_year);
                    showData(get_bill_by_year);
                    showChartByYear(start_year, end_year);
                } catch (SQLException ex) {
                    Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            default ->
                throw new AssertionError();
        }
    }//GEN-LAST:event_btn_filterActionPerformed

    private void cbb_filterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbb_filterActionPerformed
        int index = cbb_filter.getSelectedIndex();
        switch (index) {
            case 0 -> {
                pnl_date.setVisible(false);
                pnl_month.setVisible(false);
                pnl_year.setVisible(false);
                pnl_view_all.setVisible(true);
            }
            case 1 -> {
                pnl_date.setVisible(true);
                pnl_month.setVisible(false);
                pnl_year.setVisible(false);
                pnl_view_all.setVisible(false);
            }
            case 2 -> {
                pnl_date.setVisible(false);
                pnl_month.setVisible(true);
                pnl_year.setVisible(false);
                pnl_view_all.setVisible(false);
            }
            case 3 -> {
                pnl_view_all.setVisible(false);
                pnl_date.setVisible(false);
                pnl_month.setVisible(false);
                pnl_year.setVisible(true);
            }
            default ->
                throw new AssertionError();
        }
    }//GEN-LAST:event_cbb_filterActionPerformed

    private void btn_export_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_export_reportActionPerformed
        MessageFormat header = new MessageFormat(report_title);
        MessageFormat footer = new MessageFormat("{0}");
        try {
            tblOrder_list.print(JTable.PrintMode.FIT_WIDTH, header, footer);
        } catch (PrinterException e) {

        }
    }//GEN-LAST:event_btn_export_reportActionPerformed

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        FrmMain frm = new FrmMain();
        frm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRevenueManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmRevenueManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_export_report;
    private javax.swing.JButton btn_filter;
    private javax.swing.JComboBox<String> cbb_filter;
    private com.toedter.calendar.JDateChooser datechooser_end_date;
    private com.toedter.calendar.JDateChooser datechooser_start_date;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLayeredPane layerpnl_date_month_year;
    private javax.swing.JLabel lbl_average_icon;
    private javax.swing.JLabel lbl_average_money;
    private javax.swing.JLabel lbl_total_money;
    private javax.swing.JLabel lbl_totalmoney_icon;
    private com.toedter.calendar.JMonthChooser monthchooser_end_month;
    private com.toedter.calendar.JMonthChooser monthchooser_start_month;
    private javax.swing.JPanel pnlCenter;
    private javax.swing.JPanel pnlNorth;
    private javax.swing.JPanel pnlWest;
    private javax.swing.JPanel pnl_date;
    private javax.swing.JPanel pnl_filter_board;
    private javax.swing.JPanel pnl_month;
    private javax.swing.JPanel pnl_view_all;
    private javax.swing.JPanel pnl_year;
    private javax.swing.JTable tblOrder_list;
    private com.toedter.calendar.JYearChooser yearchooser_end_year;
    private com.toedter.calendar.JYearChooser yearchooser_start_year;
    // End of variables declaration//GEN-END:variables

    private void showData(ResultSet result) throws SQLException {
        ((DefaultTableModel)tblOrder_list.getModel()).setRowCount(0); //clear table
        try {
            if (result.isBeforeFirst() == true) {
                long total_money = 0;
                int index = 0;
                tblOrder_list.getColumnModel().getColumn(1).setHeaderValue(result.getMetaData().getColumnName(1));
                tblOrder_list.getTableHeader().resizeAndRepaint();
                while (result.next()) {
                    String rows[] = new String[5];
                    total_money += result.getInt(4);
                    index++;
                    rows[0] = String.valueOf(index);
                    rows[1] = result.getString(1);
                    rows[2] = money_format.format(result.getInt(2));
                    rows[3] = money_format.format(result.getInt(3));
                    rows[4] = money_format.format(result.getInt(4));
                    ((DefaultTableModel)tblOrder_list.getModel()).addRow(rows);
                }
                lbl_total_money.setText(money_format.format(total_money));
                lbl_average_money.setText(money_format.format(total_money / index));
            } else {
                lbl_total_money.setText("0 đ");
                lbl_average_money.setText("0 đ");
            }

        } catch (SQLException e) {
        }
    }

    private void setCalendarLocale() {
        monthchooser_start_month.setLocale(locale);
        monthchooser_end_month.setLocale(locale);
        datechooser_start_date.setLocale(locale);
        datechooser_end_date.setLocale(locale);
    }

    private void createChart(ResultSet result, String title, String row_name, String column_name) throws SQLException {
        pnlCenter.removeAll();  //refresh panel
        pnlCenter.revalidate(); //refresh panel

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        while (result.next()) { //add data from statement to dataset
            dataset.addValue(result.getInt(2), "Tổng tiền", result.getString(1));
            dataset.addValue(result.getInt(3), "Tiền đã giảm", result.getString(1));
            dataset.addValue(result.getInt(4), "Doanh thu", result.getString(1));
        }

        JFreeChart barchart = ChartFactory.createBarChart( //create bar chart
                title,
                row_name, column_name,
                dataset, PlotOrientation.VERTICAL, true, true, true);
        barchart.getTitle().setMargin(10, 0, 0, 0);
        report_title = title;

        ChartPanel chartPanel = new ChartPanel(barchart);

        Border border = new LineBorder(Color.black, 1);
        chartPanel.setBorder(border);

        pnlCenter.add(chartPanel, BorderLayout.CENTER);
    }

    private void showAllChart() throws SQLException {
        try {
            createChart(bill.getAllBills(), "BIỂU ĐỒ DOANH THU", "Ngày", "Doanh thu(VNĐ)");
            lbl_average_money.setText(lbl_average_money.getText() + "/Ngày");
        } catch (SQLException ex) {
            Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showChartByDate(Date start_date, Date end_date) throws SQLException {
        SimpleDateFormat date_formatter = new SimpleDateFormat("dd/MM/yyyy");
        String title = "";
        if (date_formatter.format(start_date).equals(date_formatter.format(end_date))) {
            title = "BIỂU ĐỒ DOANH THU NGÀY " + date_formatter.format(start_date);
        } else {
            title = "BIỂU ĐỒ DOANH THU TỪ NGÀY " + date_formatter.format(start_date) + " ĐẾN NGÀY " + date_formatter.format(end_date) + "";
        }
        createChart(bill.getBillsByDate(start_date, end_date), title, "NGÀY", "DOANH THU(VNĐ)");
        lbl_average_money.setText(lbl_average_money.getText() + "/Ngày");
    }

    public void showChartByMonth(int start_month, int end_month) throws SQLException {
        try {
            String title = "";
            if (start_month == end_month) {
                title = "BIỂU ĐỒ DOANH THU THÁNG " + start_month;
            } else {
                title = "BIỂU ĐỒ DOANH THU TỪ THÁNG " + start_month + " ĐẾN THÁNG " + end_month + "";
            }
            createChart(bill.getBillsByMonth(start_month, end_month), title, "THÁNG", "DOANH THU(VNĐ)");
            lbl_average_money.setText(lbl_average_money.getText() + "/Tháng");
        } catch (SQLException ex) {
            Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void showChartByYear(int start_year, int end_year) throws SQLException {
        try {
            String title = "";
            if (start_year == end_year) {
                title = "BIỂU ĐỒ DOANH THU NĂM " + start_year;
            } else {
                title = "BIỂU ĐỒ DOANH THU TỪ NĂM " + start_year + " ĐẾN NĂM " + end_year + "";
            }
            createChart(bill.getBillsByYear(start_year, end_year), title, "NĂM", "DOANH THU(VNĐ)");
            lbl_average_money.setText(lbl_average_money.getText() + "/Năm");
        } catch (SQLException ex) {
            Logger.getLogger(FrmRevenueManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void tableContent() {
        JTableHeader tableheader = tblOrder_list.getTableHeader();
        tableheader.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    public void setIcons() {
        btn_filter.setIcon(new ImageIcon(getClass().getResource("/icon/calendar-filter-512 (1).png")));
        lbl_average_icon.setIcon(new ImageIcon(getClass().getResource("/icon/average_money.png")));
        lbl_totalmoney_icon.setIcon(new ImageIcon(getClass().getResource("/icon/salary.png")));
        btn_export_report.setIcon(new ImageIcon(getClass().getResource("/icon/report-icon_48.png")));
    }
}
